#!/bin/bash -e

if [ $# -ne 3 ]; then
    echo "Usage: clevis luks-bind DEVICE PIN CONFIG" >&2
    exit 1
fi

export device=$1

# Generate a key with the same size as the LUKS Master Key
bits=`cryptsetup luksDump $device | sed -r -n 's|MK bits:[ \t]*([0-9]+)|\1|p'`
bytes=$(($bits / 8))
new=`od -An -N $bytes -t x8 /dev/urandom | tr -d '\n '`

# Encrypt the key
pth=`realpath "$0"`
dir=`dirname "$pth"`
jwe=`echo -n $new | "$dir/clevis-encrypt" "$2" "$3"`

# If necessary, initialize the LUKS volume
if ! luksmeta test -d $device; then
    luksmeta init -d $device
fi

# Write the JWE to the first slot unused by both LUKS and LUKSMeta
export slot=`echo -n $jwe | luksmeta save -d $device -u cb6e8904-81ff-40da-a84a-07ab9ab5715e`

# From here on out, if anything fails, we remove the LUKSMeta slot we just created
function onerr() {
    luksmeta wipe -f -d $device -u cb6e8904-81ff-40da-a84a-07ab9ab5715e -s $slot
}

trap 'onerr' ERR

# Add the new key to the LUKS slot that matches the LUKSMeta slot
read -s -p "Enter existing LUKS password: " old
echo
echo -e "$old\n$new" | cryptsetup luksAddKey -S $slot $device
